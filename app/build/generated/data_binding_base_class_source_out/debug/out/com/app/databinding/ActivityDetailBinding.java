// Generated by view binder compiler. Do not edit!
package com.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton collects;

  @NonNull
  public final TextView detailRealTitle;

  @NonNull
  public final Toolbar detailToolBar;

  @NonNull
  public final WebView newsWebView;

  private ActivityDetailBinding(@NonNull LinearLayout rootView, @NonNull ImageButton collects,
      @NonNull TextView detailRealTitle, @NonNull Toolbar detailToolBar,
      @NonNull WebView newsWebView) {
    this.rootView = rootView;
    this.collects = collects;
    this.detailRealTitle = detailRealTitle;
    this.detailToolBar = detailToolBar;
    this.newsWebView = newsWebView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.collects;
      ImageButton collects = ViewBindings.findChildViewById(rootView, id);
      if (collects == null) {
        break missingId;
      }

      id = R.id.detail_real_title;
      TextView detailRealTitle = ViewBindings.findChildViewById(rootView, id);
      if (detailRealTitle == null) {
        break missingId;
      }

      id = R.id.detail_tool_bar;
      Toolbar detailToolBar = ViewBindings.findChildViewById(rootView, id);
      if (detailToolBar == null) {
        break missingId;
      }

      id = R.id.news_web_view;
      WebView newsWebView = ViewBindings.findChildViewById(rootView, id);
      if (newsWebView == null) {
        break missingId;
      }

      return new ActivityDetailBinding((LinearLayout) rootView, collects, detailRealTitle,
          detailToolBar, newsWebView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
