// Generated by view binder compiler. Do not edit!
package com.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.app.R;
import com.makeramen.roundedimageview.RoundedImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NewsItemThreeImagesBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView newsDesc;

  @NonNull
  public final RoundedImageView newsImage1;

  @NonNull
  public final RoundedImageView newsImage2;

  @NonNull
  public final RoundedImageView newsImage3;

  @NonNull
  public final TextView newsTitle;

  private NewsItemThreeImagesBinding(@NonNull LinearLayout rootView, @NonNull TextView newsDesc,
      @NonNull RoundedImageView newsImage1, @NonNull RoundedImageView newsImage2,
      @NonNull RoundedImageView newsImage3, @NonNull TextView newsTitle) {
    this.rootView = rootView;
    this.newsDesc = newsDesc;
    this.newsImage1 = newsImage1;
    this.newsImage2 = newsImage2;
    this.newsImage3 = newsImage3;
    this.newsTitle = newsTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NewsItemThreeImagesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NewsItemThreeImagesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.news_item_three_images, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NewsItemThreeImagesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.news_desc;
      TextView newsDesc = ViewBindings.findChildViewById(rootView, id);
      if (newsDesc == null) {
        break missingId;
      }

      id = R.id.news_image_1;
      RoundedImageView newsImage1 = ViewBindings.findChildViewById(rootView, id);
      if (newsImage1 == null) {
        break missingId;
      }

      id = R.id.news_image_2;
      RoundedImageView newsImage2 = ViewBindings.findChildViewById(rootView, id);
      if (newsImage2 == null) {
        break missingId;
      }

      id = R.id.news_image_3;
      RoundedImageView newsImage3 = ViewBindings.findChildViewById(rootView, id);
      if (newsImage3 == null) {
        break missingId;
      }

      id = R.id.news_title;
      TextView newsTitle = ViewBindings.findChildViewById(rootView, id);
      if (newsTitle == null) {
        break missingId;
      }

      return new NewsItemThreeImagesBinding((LinearLayout) rootView, newsDesc, newsImage1,
          newsImage2, newsImage3, newsTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
